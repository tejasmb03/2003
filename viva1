Python viva programs
1. for num in range(100, 201):
    if sum(map(int, str(num))) % 2 == 0:
        print(num)

2. from datetime import datetime as dt
print(dt.now().strftime("%d/%m/%Y"))


3. my_list = [1, 2, 3]
print("Initial list:", my_list)
my_list.append(4)
print(my_list)
my_list.remove(2)
my_list.pop()
print( my_list)


4. user_input = input("Enter a string: ")
formatted_string = user_input.title()
print("Formatted string:", formatted_string)


5.lst = [1, 2, 3, 4, 1]
print("The first and last numbers are" + (" not " if lst and lst[0] != lst[-1] else " ") + "the same.")


6.strings = ["apple", "banana", "cherry"]
number = 42
for s in strings:
    print(number, s)

7.import re
def validate_pan(pan_number):
    return bool(re.match(r'^[A-Z]{5}[0-9]{4}[A-Z]$', pan_number))
pan1 = "ABCDE1234F"
print(f"Is {pan1} a valid PAN number? {validate_pan(pan1)}")


8.import re
text = "Visit our website at https://www.example.com or check out https://www.example.org for more information."
print("URLs:", re.findall(r'https?://\S+', text))

9.file_path = "prajeeth29.txt"
with open(file_path) as file:
    lines = [line.strip() for line in file]
print(lines)


10.class Calculator:
    def add(self, num1, num2): return num1 + num2
    def subtract(self, num1, num2): return num1 - num2
    def multiply(self, num1, num2): return num1 * num2
    def divide(self, num1, num2): return num1 / num2 if num2 != 0 else "Division by zero is not allowed"  
calc = Calculator()
print("Addition:", calc.add(5, 3))
print("Subtraction:", calc.subtract(8, 2))
print("Multiplication:", calc.multiply(4, 6))
print("Division:", calc.divide(10, 2))


11.import pandas as pd
try:
    print(pd.read_excel('prajeeth.xlsx', usecols=['Column1', 'Column2', 'Column3']))
except FileNotFoundError:
    print("File not found.")
except Exception as e:
    print(f"An error occurred: {str(e)}")


12.import json
with open('input.json', 'r') as f:
    json.dump(json.load(f), open('output.json', 'w'), indent=4, sort_keys=True)

print("JSON keys sorted and written to 'output.json'.")
